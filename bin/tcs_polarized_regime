import argparse
from tc_study.polarized_regime.evaluation import compute_truncated_unsupervised_metrics
from tc_study.polarized_regime.evaluation import compute_passive_variable_indexes

if __name__ == "__main__":
    # Eg: python tcs_polarized_regime "/media/bonheml/phd_data/VAE_trained_models" sampled unsupervised -o
    parser = argparse.ArgumentParser(description="Compile unsupervised scores from dislib pre-trained VAE models")
    parser.add_argument("model_path", type=str, help="Path where the pre-trained models are or will be stored")
    parser.add_argument("representation", type=str, choices=["mean", "sampled", "var"],
                        help="Representation from which we need to compute unsupervised scores")
    parser.add_argument("metric", type=str, choices=["pv", "unsupervised"],
                        help="Compute passive variable indexes or unsupervised metrics. Passive variables must be "
                             "computed beforehand.")
    parser.add_argument("--overwrite", "-o", action="store_true", help="Overwrite existing results")
    args = parser.parse_args()
    if args.metric == "pv":
        compute_passive_variable_indexes(args.model_path, overwrite=args.overwrite)
    else:
        compute_truncated_unsupervised_metrics(args.model_path, args.representation, overwrite=args.overwrite)
